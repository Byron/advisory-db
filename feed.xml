<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2023-01-12T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2022-0076: Vulnerability in wasmtime</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0076.html</id><updated>2023-01-12T12:00:00+00:00</updated><category term="memory-corruption"/><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0076.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0076: Vulnerability in wasmtime"/><published>2023-01-12T12:00:00+00:00</published><summary xml:lang="en">Bug in Wasmtime implementation of pooling instance allocator</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime/RUSTSEC-2022-0076.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime/RUSTSEC-2022-0076.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0076
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Bug in Wasmtime implementation of pooling instance allocator&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-10&quot;&gt;
          November 10, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-01-12&quot;&gt;
          January 12, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/wasmtime.html&quot;&gt;wasmtime&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/wasmtime&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory.html&quot;&gt;#memory&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/allocator.html&quot;&gt;#allocator&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/Wasm.html&quot;&gt;#Wasm&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/bounds.html&quot;&gt;#bounds&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/sandbox.html&quot;&gt;#sandbox&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/paging.html&quot;&gt;#paging&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39392&quot;&gt;CVE-2022-39392&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-44mr-8vmm-wjhg&quot;&gt;GHSA-44mr-8vmm-wjhg&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg&quot;&gt;
          https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;7.4 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N&quot;&gt;CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=2.0.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;wasmtime::PoolingAllocationConfig::instance_memory_pages&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;2.0.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Bug in Wasmtime&apos;s implementation of its pooling instance allocator when the allocator is configured to give WebAssembly instances a maximum of zero pages of memory.&lt;/p&gt;
&lt;p&gt;In this configuration, the virtual memory mapping for WebAssembly memories did not meet the compiler-required configuration requirements for safely executing WebAssembly modules. Wasmtime&apos;s default settings require virtual memory page faults to indicate that wasm reads/writes are out-of-bounds, but the pooling allocator&apos;s configuration would not create an appropriate virtual memory mapping for this meaning out of bounds reads/writes can successfully read/write memory unrelated to the wasm sandbox within range of the base address of the memory mapping created by the pooling allocator.&lt;/p&gt;
&lt;p&gt;This bug is not applicable with the default settings of the &lt;code&gt;wasmtime&lt;/code&gt; crate.&lt;/p&gt;
&lt;p&gt;This bug can only be triggered by setting &lt;code&gt;InstanceLimits::memory_pages&lt;/code&gt; to zero.&lt;/p&gt;
&lt;p&gt;This is expected to be a very rare configuration since this means that wasm modules cannot allocate any pages of linear memory.&lt;/p&gt;
&lt;p&gt;All wasm modules produced by all current toolchains are highly likely to use linear memory, so it&apos;s expected to be unlikely that this configuration is set to zero by any production embedding of Wasmtime.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0075: Vulnerability in wasmtime</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0075.html</id><updated>2023-01-12T12:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0075.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0075: Vulnerability in wasmtime"/><published>2023-01-12T12:00:00+00:00</published><summary xml:lang="en">Bug in pooling instance allocator</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime/RUSTSEC-2022-0075.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime/RUSTSEC-2022-0075.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0075
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Bug in pooling instance allocator&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-10&quot;&gt;
          November 10, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-01-12&quot;&gt;
          January 12, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/wasmtime.html&quot;&gt;wasmtime&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/wasmtime&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/Wasm.html&quot;&gt;#Wasm&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/garbage-collection.html&quot;&gt;#garbage-collection&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39393&quot;&gt;CVE-2022-39393&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-wh6w-3828-g9qf&quot;&gt;GHSA-wh6w-3828-g9qf&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-wh6w-3828-g9qf&quot;&gt;
          https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-wh6w-3828-g9qf
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=2.0.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;bug in Wasmtime&apos;s implementation of its pooling instance allocator where when a linear memory is reused for another instance the initial heap snapshot of the prior instance can be visible, erroneously to the next instance.&lt;/p&gt;
&lt;p&gt;Mitigations are described &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-wh6w-3828-g9qf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0001: Vulnerability in tokio</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0001.html</id><updated>2023-01-09T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2023-0001.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0001: Vulnerability in tokio"/><published>2023-01-09T12:00:00+00:00</published><summary xml:lang="en">reject_remote_clients Configuration corruption</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tokio/RUSTSEC-2023-0001.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tokio/RUSTSEC-2023-0001.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0001
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;reject_remote_clients Configuration corruption&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-01-04&quot;&gt;
          January  4, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-01-09&quot;&gt;
          January  9, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/tokio.html&quot;&gt;tokio&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/tokio&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/configuration-failure.html&quot;&gt;#configuration-failure&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-22466&quot;&gt;CVE-2023-22466&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-7rrj-xr53-82p7&quot;&gt;GHSA-7rrj-xr53-82p7&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/tokio-rs/tokio/security/advisories/GHSA-7rrj-xr53-82p7&quot;&gt;
          https://github.com/tokio-rs/tokio/security/advisories/GHSA-7rrj-xr53-82p7
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.18.4, &amp;lt;1.19.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.20.3, &amp;lt;1.21.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.23.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;1.7.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;On Windows, configuring a named pipe server with &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.pipe_mode&quot;&gt;pipe_mode&lt;/a&gt; will force &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html&quot;&gt;ServerOptions&lt;/a&gt;::&lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.reject_remote_clients&quot;&gt;reject_remote_clients&lt;/a&gt; as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This drops any intended explicit configuration for the &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.reject_remote_clients&quot;&gt;reject_remote_clients&lt;/a&gt; that may have been set as &lt;code&gt;true&lt;/code&gt; previously.&lt;/p&gt;
&lt;p&gt;The default setting of &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.reject_remote_clients&quot;&gt;reject_remote_clients&lt;/a&gt; is normally &lt;code&gt;true&lt;/code&gt; meaning the default is also overriden as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Workarounds&lt;/h2&gt;
&lt;p&gt;Ensure that &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.pipe_mode&quot;&gt;pipe_mode&lt;/a&gt; is set first after initializing a &lt;a href=&quot;https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html&quot;&gt;ServerOptions&lt;/a&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;let mut opts = ServerOptions::new();
opts.pipe_mode(PipeMode::Message);
opts.reject_remote_clients(true);
&lt;/code&gt;&lt;/pre&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0074: Unsoundness in prettytable-rs</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0074.html</id><updated>2022-12-27T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0074.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0074: Unsoundness in prettytable-rs"/><published>2022-12-27T12:00:00+00:00</published><summary xml:lang="en">Force cast a &amp;amp;Vec&amp;lt;T&amp;gt; to &amp;amp;[T]</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/prettytable-rs/RUSTSEC-2022-0074.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/prettytable-rs/RUSTSEC-2022-0074.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0074
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Force cast a &amp;amp;Vec&lt;!-- raw HTML omitted --&gt; to &amp;amp;[T]&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-02&quot;&gt;
          December  2, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-27&quot;&gt;
          December 27, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/prettytable-rs.html&quot;&gt;prettytable-rs&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/prettytable-rs&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/tab.html&quot;&gt;#tab&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/table.html&quot;&gt;#table&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/format.html&quot;&gt;#format&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/pretty.html&quot;&gt;#pretty&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/print.html&quot;&gt;#print&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/phsym/prettytable-rs/issues/145&quot;&gt;
          https://github.com/phsym/prettytable-rs/issues/145
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;In function &lt;code&gt;Table::as_ref&lt;/code&gt;, a reference of vector is force cast to slice. There are multiple problems here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To guarantee the size is correct, we have to first do &lt;code&gt;Vec::shrink_to_fit&lt;/code&gt;. The function requires a mutable reference, so we have to force cast from immutable to mutable, which is UB.&lt;/li&gt;
&lt;li&gt;Even if (1) is sound, &lt;code&gt;&amp;amp;Vec&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;[T]&lt;/code&gt; still might not have the same layout. Treating them equally may lead to UB.&lt;/li&gt;
&lt;/ol&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0073: alloc-cortex-m is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0073.html</id><updated>2022-12-23T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0073.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0073: alloc-cortex-m is unmaintained"/><published>2022-12-23T12:00:00+00:00</published><summary xml:lang="en">crate has been renamed to `embedded-alloc`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/alloc-cortex-m/RUSTSEC-2022-0073.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/alloc-cortex-m/RUSTSEC-2022-0073.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0073
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;crate has been renamed to &lt;code&gt;embedded-alloc&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-21&quot;&gt;
          December 21, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-23&quot;&gt;
          December 23, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/alloc-cortex-m.html&quot;&gt;alloc-cortex-m&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/alloc-cortex-m&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/rust-embedded/embedded-alloc/pull/56&quot;&gt;
          https://github.com/rust-embedded/embedded-alloc/pull/56
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This crate has been renamed from &lt;code&gt;alloc-cortex-m&lt;/code&gt; to &lt;code&gt;embedded-alloc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The new repository location is:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-embedded/embedded-alloc&quot;&gt;https://github.com/rust-embedded/embedded-alloc&lt;/a&gt;&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0072: Vulnerability in hyper-staticfile</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0072.html</id><updated>2022-12-23T12:00:00+00:00</updated><category term="format-injection"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0072.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0072: Vulnerability in hyper-staticfile"/><published>2022-12-23T12:00:00+00:00</published><summary xml:lang="en">Location header incorporates user input, allowing open redirect</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/hyper-staticfile/RUSTSEC-2022-0072.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/hyper-staticfile/RUSTSEC-2022-0072.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0072
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Location header incorporates user input, allowing open redirect&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-23&quot;&gt;
          December 23, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-23&quot;&gt;
          December 23, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/hyper-staticfile.html&quot;&gt;hyper-staticfile&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/hyper-staticfile&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/format-injection.html&quot;&gt;format-injection&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/open-redirect.html&quot;&gt;#open-redirect&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/http.html&quot;&gt;#http&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/stephank/hyper-staticfile/commit/f12cadc6666c6f555d29725f5bc45da2103f24ea&quot;&gt;
          https://github.com/stephank/hyper-staticfile/commit/f12cadc6666c6f555d29725f5bc45da2103f24ea
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.9.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.0-alpha.5&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;When &lt;code&gt;hyper-staticfile&lt;/code&gt; performs a redirect for a directory request (e.g. a
request for &lt;code&gt;/dir&lt;/code&gt; that redirects to &lt;code&gt;/dir/&lt;/code&gt;), the &lt;code&gt;Location&lt;/code&gt; header value was
derived from user input (the request path), simply appending a slash. The
intent was to perform an origin-relative redirect, but specific inputs
allowed performing a scheme-relative redirect instead.&lt;/p&gt;
&lt;p&gt;An attacker could craft a special URL that would appear to be for the correct
domain, but immediately redirects to a malicious domain. Such a URL can benefit
phishing attacks, for example an innocent looking link in an email.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0071: rusoto_credential is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0071.html</id><updated>2022-12-18T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0071.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0071: rusoto_credential is unmaintained"/><published>2022-12-18T12:00:00+00:00</published><summary xml:lang="en">Rusoto is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rusoto_credential/RUSTSEC-2022-0071.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rusoto_credential/RUSTSEC-2022-0071.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0071
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Rusoto is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-04-24&quot;&gt;
          April 24, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-18&quot;&gt;
          December 18, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/rusoto_credential.html&quot;&gt;rusoto_credential&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rusoto_credential&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/rusoto/rusoto/issues/1651&quot;&gt;
          https://github.com/rusoto/rusoto/issues/1651
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The maintainers of Rusoto advise that all its crates are deprecated. This includes the common crates &lt;code&gt;rusoto_core&lt;/code&gt;, &lt;code&gt;rusoto_signature&lt;/code&gt;, &lt;code&gt;rusoto_credential&lt;/code&gt;, and service crates such as &lt;code&gt;rusoto_s3&lt;/code&gt; and &lt;code&gt;rusoto_ec2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Users should migrate to the &lt;a href=&quot;https://github.com/awslabs/aws-sdk-rust&quot;&gt;AWS SDK for Rust&lt;/a&gt;, which is maintained by AWS.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0070: Unsoundness in secp256k1</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0070.html</id><updated>2022-12-07T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0070.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0070: Unsoundness in secp256k1"/><published>2022-12-07T12:00:00+00:00</published><summary xml:lang="en">Unsound API in `secp256k1` allows use-after-free and invalid deallocation from safe code</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/secp256k1/RUSTSEC-2022-0070.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/secp256k1/RUSTSEC-2022-0070.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0070
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound API in &lt;code&gt;secp256k1&lt;/code&gt; allows use-after-free and invalid deallocation from safe code&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-30&quot;&gt;
          November 30, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-12-07&quot;&gt;
          December  7, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/secp256k1.html&quot;&gt;secp256k1&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/secp256k1&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/unsound-api.html&quot;&gt;#unsound-api&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/invalid-free.html&quot;&gt;#invalid-free&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/rust-bitcoin/rust-secp256k1/issues/543&quot;&gt;
          https://github.com/rust-bitcoin/rust-secp256k1/issues/543
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.22.2, &amp;lt;0.23.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.23.5, &amp;lt;0.24.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.24.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.14.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;secp256k1::Secp256k1::preallocated_gen_new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.22.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.23.0, &amp;lt;0.23.5&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.24.0, &amp;lt;0.24.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Because of incorrect bounds on method &lt;code&gt;Secp256k1::preallocated_gen_new&lt;/code&gt; it was possible to cause use-after-free from safe consumer code. It was also possible to &amp;quot;free&amp;quot; memory not allocated by the appropriate allocator.&lt;/p&gt;
&lt;p&gt;The method takes a place for storing the context as a mutable reference and returns context containing that reference. Because the code internally uses &lt;code&gt;unsafe&lt;/code&gt; and the bounds were incorrect it was possible to create a context that outlived the passed reference (e.g. &lt;code&gt;&apos;static&lt;/code&gt;). Because the context can alternatively carry heap-allocated pointer freed on drop it was possible to &amp;quot;deallocate&amp;quot; a pointer that wasn&apos;t returned from appropriate allocator. The code decides whether to free the memory based on type parameter but because of missing bound it was possible to construct the context with invalid parameter.&lt;/p&gt;
&lt;p&gt;You are unaffected if you either&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;don&apos;t call &lt;code&gt;Secp256k1::preallocated_gen_new&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;manually checked that your usage of the method is sound&lt;/li&gt;
&lt;li&gt;upgraded to the patched version of &lt;code&gt;secp256k1&lt;/code&gt; (recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The patched version uses correct bounds which means it is API-breaking. This effectively means adopting the policy of Rust lang itself allowing API-breaking changes to fix soundness bugs. Note however that valid straigthforward usage of the code will continue to compile. Only unsound code or code that propagates the bound in custom generics will fail to compile. If the code is sound fixing the bounds should be sufficient to make the code compile.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-bitcoin/rust-secp256k1/issues/543&quot;&gt;GitHub issue&lt;/a&gt; for example &amp;quot;exploit&amp;quot; code and further discussion.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0069: Vulnerability in hyper-staticfile</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0069.html</id><updated>2022-11-30T12:00:00+00:00</updated><category term="file-disclosure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0069.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0069: Vulnerability in hyper-staticfile"/><published>2022-11-30T12:00:00+00:00</published><summary xml:lang="en">Improper validation of Windows paths could lead to directory traversal attack</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/hyper-staticfile/RUSTSEC-2022-0069.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/hyper-staticfile/RUSTSEC-2022-0069.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0069
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Improper validation of Windows paths could lead to directory traversal attack&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-30&quot;&gt;
          November 30, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-30&quot;&gt;
          November 30, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/hyper-staticfile.html&quot;&gt;hyper-staticfile&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/hyper-staticfile&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/file-disclosure.html&quot;&gt;file-disclosure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/directory-traversal.html&quot;&gt;#directory-traversal&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/http.html&quot;&gt;#http&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/stephank/hyper-staticfile/issues/35&quot;&gt;
          https://github.com/stephank/hyper-staticfile/issues/35
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.9.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.0-alpha.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Path resolution in &lt;code&gt;hyper-staticfile&lt;/code&gt; didn&apos;t correctly validate Windows paths
meaning paths like &lt;code&gt;/foo/bar/c:/windows/web/screen/img101.png&lt;/code&gt; would be allowed
and respond with the contents of &lt;code&gt;c:/windows/web/screen/img101.png&lt;/code&gt;. Thus users
could potentially read files anywhere on the filesystem.&lt;/p&gt;
&lt;p&gt;This only impacts Windows. Linux and other unix likes are not impacted by this.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0068: Vulnerability in capnp</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0068.html</id><updated>2022-11-30T12:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0068.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0068: Vulnerability in capnp"/><published>2022-11-30T12:00:00+00:00</published><summary xml:lang="en">out-of-bounds read possible when setting list-of-pointers</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/capnp/RUSTSEC-2022-0068.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/capnp/RUSTSEC-2022-0068.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0068
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;out-of-bounds read possible when setting list-of-pointers&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-30&quot;&gt;
          November 30, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-11-30&quot;&gt;
          November 30, 2022
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/capnp.html&quot;&gt;capnp&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/capnp&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-46149&quot;&gt;CVE-2022-46149&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-qqff-4vw4-f6hx&quot;&gt;GHSA-qqff-4vw4-f6hx&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/capnproto/capnproto/tree/master/security-advisories/2022-11-30-0-pointer-list-bounds.md&quot;&gt;
          https://github.com/capnproto/capnproto/tree/master/security-advisories/2022-11-30-0-pointer-list-bounds.md
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.14.11&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.13.7&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;If a message consumer expects data
of type &amp;quot;list of pointers&amp;quot;,
and if the consumer performs certain specific actions on such data,
then a message producer can cause the consumer to read out-of-bounds memory.
This could trigger a process crash in the consumer,
or in some cases could allow exfiltration of private in-memory data.&lt;/p&gt;
&lt;p&gt;The C++ Cap&apos;n Proto library is also affected by this bug.
See the &lt;a href=&quot;https://github.com/capnproto/capnproto/tree/master/security-advisories/2022-11-30-0-pointer-list-bounds.md&quot;&gt;advisory&lt;/a&gt;
on the main Cap&apos;n Proto repo for a succinct description of
the exact circumstances in which the problem can arise.&lt;/p&gt;

  &lt;/article&gt;</content></entry></feed>