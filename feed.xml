<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2021-12-21T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2021-0130: Vulnerability in lru</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0130.html</id><updated>2021-12-21T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0130.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0130: Vulnerability in lru"/><published>2021-12-21T00:00:00+00:00</published><summary xml:lang="en">Use after free in lru crate</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/lru/RUSTSEC-2021-0130.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/lru/RUSTSEC-2021-0130.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0130
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Use after free in lru crate&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-12-21&quot;&gt;
          December 21, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/lru.html&quot;&gt;lru&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/lru&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;jeromefroe&amp;#x2f;lru-rs&amp;#x2f;issues&amp;#x2f;120&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;jeromefroe&amp;#x2f;lru-rs&amp;#x2f;issues&amp;#x2f;120
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;lru::LruCache::iter&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.7.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;lru::LruCache::iter_mut&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.7.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Lru crate has use after free vulnerability.&lt;/p&gt;
&lt;p&gt;Lru crate has two functions for getting an iterator. Both iterators give
references to key and value. Calling specific functions, like pop(), will remove
and free the value, and but it&apos;s still possible to access the reference of value
which is already dropped causing use after free.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0131: Vulnerability in brotli-sys</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0131.html</id><updated>2021-12-20T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0131.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0131: Vulnerability in brotli-sys"/><published>2021-12-20T00:00:00+00:00</published><summary xml:lang="en">Integer overflow in the bundled Brotli C library</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/brotli-sys/RUSTSEC-2021-0131.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/brotli-sys/RUSTSEC-2021-0131.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0131
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Integer overflow in the bundled Brotli C library&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-12-20&quot;&gt;
          December 20, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/brotli-sys.html&quot;&gt;brotli-sys&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/brotli-sys&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/integer-overflow.html&quot;&gt;#integer-overflow&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2020-8927&quot;&gt;CVE-2020-8927&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;bitemyapp&amp;#x2f;brotli2-rs&amp;#x2f;issues&amp;#x2f;45&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;bitemyapp&amp;#x2f;brotli2-rs&amp;#x2f;issues&amp;#x2f;45
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/integer-overflow.html&quot;&gt;#integer-overflow&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A buffer overflow exists in the Brotli library versions prior to 1.0.8 where an attacker controlling the input length of a &amp;quot;one-shot&amp;quot; decompression request to a script can trigger a crash, which happens when copying over chunks of data larger than 2 GiB.&lt;/p&gt;
&lt;p&gt;An updated version of &lt;code&gt;brotli-sys&lt;/code&gt; has not been released. If one cannot update the C library, its authors recommend to use the &amp;quot;streaming&amp;quot; API as opposed to the &amp;quot;one-shot&amp;quot; API, and impose chunk size limits.&lt;/p&gt;
&lt;p&gt;In Rust the issue can be mitigated by migrating to the &lt;code&gt;brotli&lt;/code&gt; crate, which provides a Rust implementation of Brotli compression and decompression that is not affected by this issue.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0129: Vulnerability in openssl-src</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0129.html</id><updated>2021-12-14T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0129.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0129: Vulnerability in openssl-src"/><published>2021-12-14T00:00:00+00:00</published><summary xml:lang="en">Invalid handling of `X509_verify_cert()` internal errors in libssl</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/openssl-src/RUSTSEC-2021-0129.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/openssl-src/RUSTSEC-2021-0129.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0129
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Invalid handling of &lt;code&gt;X509_verify_cert()&lt;/code&gt; internal errors in libssl&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-12-14&quot;&gt;
          December 14, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/openssl-src.html&quot;&gt;openssl-src&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/openssl-src&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-4044&quot;&gt;CVE-2021-4044&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20211214.txt&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20211214.txt
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=300.0.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;300.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Internally libssl in OpenSSL calls &lt;code&gt;X509_verify_cert()&lt;/code&gt; on the client side to
verify a certificate supplied by a server. That function may return a negative
return value to indicate an internal error (for example out of memory). Such a
negative return value is mishandled by OpenSSL and will cause an IO function
(such as &lt;code&gt;SSL_connect()&lt;/code&gt; or &lt;code&gt;SSL_do_handshake()&lt;/code&gt;) to not indicate success and a
subsequent call to &lt;code&gt;SSL_get_error()&lt;/code&gt; to return the value
&lt;code&gt;SSL_ERROR_WANT_RETRY_VERIFY&lt;/code&gt;. This return value is only supposed to be returned
by OpenSSL if the application has previously called
&lt;code&gt;SSL_CTX_set_cert_verify_callback()&lt;/code&gt;. Since most applications do not do this the
&lt;code&gt;SSL_ERROR_WANT_RETRY_VERIFY&lt;/code&gt; return value from &lt;code&gt;SSL_get_error()&lt;/code&gt; will be totally
unexpected and applications may not behave correctly as a result. The exact
behaviour will depend on the application but it could result in crashes,
infinite loops or other similar incorrect responses.&lt;/p&gt;
&lt;p&gt;This issue is made more serious in combination with a separate bug in OpenSSL
3.0 that will cause &lt;code&gt;X509_verify_cert()&lt;/code&gt; to indicate an internal error when
processing a certificate chain. This will occur where a certificate does not
include the Subject Alternative Name extension but where a Certificate Authority
has enforced name constraints. This issue can occur even with valid chains.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0128: Vulnerability in rusqlite</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0128.html</id><updated>2021-12-07T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0128.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0128: Vulnerability in rusqlite"/><published>2021-12-07T00:00:00+00:00</published><summary xml:lang="en">Incorrect Lifetime Bounds on Closures in `rusqlite`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rusqlite/RUSTSEC-2021-0128.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rusqlite/RUSTSEC-2021-0128.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0128
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Incorrect Lifetime Bounds on Closures in &lt;code&gt;rusqlite&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-12-07&quot;&gt;
          December  7, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/rusqlite.html&quot;&gt;rusqlite&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rusqlite&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/incorrect-lifetime.html&quot;&gt;#incorrect-lifetime&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;rusqlite&amp;#x2f;rusqlite&amp;#x2f;issues&amp;#x2f;1048&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;rusqlite&amp;#x2f;rusqlite&amp;#x2f;issues&amp;#x2f;1048
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.25.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.25.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/incorrect-lifetime.html&quot;&gt;#incorrect-lifetime&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::commit_hook&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::create_aggregate_function&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::create_collation&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::create_scalar_function&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::create_window_function&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::rollback_hook&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;rusqlite::Connection::update_hook&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.25.0, &amp;lt;0.25.4&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.0, &amp;lt;0.26.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The lifetime bound on several closure-accepting &lt;code&gt;rusqlite&lt;/code&gt; functions (specifically, functions which register a callback to be later invoked by SQLite) was too relaxed. If a closure referencing borrowed values on the stack is was passed to one of these functions, it could allow Rust code to access objects on the stack after they have been dropped.&lt;/p&gt;
&lt;p&gt;The impacted functions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Under &lt;code&gt;cfg(feature = &amp;quot;functions&amp;quot;)&lt;/code&gt;: &lt;code&gt;Connection::create_scalar_function&lt;/code&gt;, &lt;code&gt;Connection::create_aggregate_function&lt;/code&gt; and &lt;code&gt;Connection::create_window_function&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;cfg(feature = &amp;quot;hooks&amp;quot;)&lt;/code&gt;: &lt;code&gt;Connection::commit_hook&lt;/code&gt;, &lt;code&gt;Connection::rollback_hook&lt;/code&gt; and &lt;code&gt;Connection::update_hook&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;cfg(feature = &amp;quot;collation&amp;quot;)&lt;/code&gt;: &lt;code&gt;Connection::create_collation&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The issue exists in all &lt;code&gt;0.25.*&lt;/code&gt; versions prior to &lt;code&gt;0.25.4&lt;/code&gt;, and all &lt;code&gt;0.26.*&lt;/code&gt; versions prior to 0.26.2 (specifically: &lt;code&gt;0.25.0&lt;/code&gt;, &lt;code&gt;0.25.1&lt;/code&gt;, &lt;code&gt;0.25.2&lt;/code&gt;, &lt;code&gt;0.25.3&lt;/code&gt;, &lt;code&gt;0.26.0&lt;/code&gt;, and &lt;code&gt;0.26.1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The fix is available in versions &lt;code&gt;0.26.2&lt;/code&gt; and newer, and also has been back-ported to &lt;code&gt;0.25.4&lt;/code&gt;. As it does not exist in &lt;code&gt;0.24.*&lt;/code&gt;, all affected versions should have an upgrade path to a semver-compatible release.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0126: Vulnerability in rust-embed</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0126.html</id><updated>2021-11-29T00:00:00+00:00</updated><category term="file-disclosure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0126.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0126: Vulnerability in rust-embed"/><published>2021-11-29T00:00:00+00:00</published><summary xml:lang="en">RustEmbed generated `get` method allows for directory traversal when reading files from disk</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rust-embed/RUSTSEC-2021-0126.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rust-embed/RUSTSEC-2021-0126.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0126
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;RustEmbed generated &lt;code&gt;get&lt;/code&gt; method allows for directory traversal when reading files from disk&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-11-29&quot;&gt;
          November 29, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/rust-embed.html&quot;&gt;rust-embed&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rust-embed&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/file-disclosure.html&quot;&gt;file-disclosure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;pyros2097&amp;#x2f;rust-embed&amp;#x2f;issues&amp;#x2f;159&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;pyros2097&amp;#x2f;rust-embed&amp;#x2f;issues&amp;#x2f;159
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=6.3.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;When running in debug mode and the &lt;code&gt;debug-embed&lt;/code&gt; (off by default) feature is
not enabled, the generated &lt;code&gt;get&lt;/code&gt; method does not check that the input path is
a child of the folder given.&lt;/p&gt;
&lt;p&gt;This allows attackers to read arbitrary files in the file system if they have
control over the filename given. The following code will print the contents of
your &lt;code&gt;/etc/passwd&lt;/code&gt; if adjusted with a correct number of &lt;code&gt;../&lt;/code&gt;s depending on
where it is run from.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;#[derive(rust_embed::RustEmbed)]
#[folder = &amp;quot;src/&amp;quot;]
pub struct Asset;

fn main() {
    let d = Asset::get(&amp;quot;../../../etc/passwd&amp;quot;).unwrap().data;
    println!(&amp;quot;{}&amp;quot;, String::from_utf8_lossy(&amp;amp;d));
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The flaw was corrected by canonicalizing the input filename and ensuring that
it starts with the canonicalized folder path.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0124: Vulnerability in tokio</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0124.html</id><updated>2021-11-16T00:00:00+00:00</updated><category term="memory-corruption"/><category term="thread-safety"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0124.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0124: Vulnerability in tokio"/><published>2021-11-16T00:00:00+00:00</published><summary xml:lang="en">Data race when sending and receiving after closing a `oneshot` channel</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tokio/RUSTSEC-2021-0124.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tokio/RUSTSEC-2021-0124.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0124
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Data race when sending and receiving after closing a &lt;code&gt;oneshot&lt;/code&gt; channel&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-11-16&quot;&gt;
          November 16, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/tokio.html&quot;&gt;tokio&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/tokio&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/thread-safety.html&quot;&gt;thread-safety&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/race-condition.html&quot;&gt;#race-condition&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tokio-rs&amp;#x2f;tokio&amp;#x2f;issues&amp;#x2f;4225&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tokio-rs&amp;#x2f;tokio&amp;#x2f;issues&amp;#x2f;4225
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.8.4, &amp;lt;1.9.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.13.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.1.14&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/race-condition.html&quot;&gt;#race-condition&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;tokio::sync::oneshot::Receiver::close&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=1.13.0, &amp;gt;=0.1.14&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;If a &lt;code&gt;tokio::sync::oneshot&lt;/code&gt; channel is closed (via the
&lt;a href=&quot;https://docs.rs/tokio/1.14.0/tokio/sync/oneshot/struct.Receiver.html#method.close&quot;&gt;&lt;code&gt;oneshot::Receiver::close&lt;/code&gt;&lt;/a&gt; method), a data race may occur if the
&lt;code&gt;oneshot::Sender::send&lt;/code&gt; method is called while the corresponding
&lt;code&gt;oneshot::Receiver&lt;/code&gt; is &lt;code&gt;await&lt;/code&gt;ed or calling &lt;code&gt;try_recv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When these methods are called concurrently on a closed channel, the two halves
of the channel can concurrently access a shared memory location, resulting in a
data race. This has been observed to &lt;a href=&quot;https://github.com/tokio-rs/tokio/issues/4225#issuecomment-967434847&quot;&gt;cause memory corruption&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the race only occurs when &lt;strong&gt;both&lt;/strong&gt; halves of the channel are used
after the &lt;code&gt;Receiver&lt;/code&gt; half has called &lt;code&gt;close&lt;/code&gt;. Code where &lt;code&gt;close&lt;/code&gt; is not used, or where the
&lt;code&gt;Receiver&lt;/code&gt; is not &lt;code&gt;await&lt;/code&gt;ed and &lt;code&gt;try_recv&lt;/code&gt; is not called after calling &lt;code&gt;close&lt;/code&gt;,
is not affected.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/tokio-rs/tokio/issues/4225&quot;&gt;tokio#4225&lt;/a&gt; for more details.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0123: Vulnerability in fruity</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0123.html</id><updated>2021-11-14T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0123.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0123: Vulnerability in fruity"/><published>2021-11-14T00:00:00+00:00</published><summary xml:lang="en">Converting `NSString` to a String Truncates at Null Bytes</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/fruity/RUSTSEC-2021-0123.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/fruity/RUSTSEC-2021-0123.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0123
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Converting &lt;code&gt;NSString&lt;/code&gt; to a String Truncates at Null Bytes&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-11-14&quot;&gt;
          November 14, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/fruity.html&quot;&gt;fruity&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/fruity&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-43620&quot;&gt;CVE-2021-43620&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nvzqz&amp;#x2f;fruity&amp;#x2f;issues&amp;#x2f;14&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nvzqz&amp;#x2f;fruity&amp;#x2f;issues&amp;#x2f;14
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_str_with_nul&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_string&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_string_with_nul&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Methods of &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; for conversion to a string may return a partial result.
Since they call &lt;a href=&quot;https://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_ptr&quot;&gt;&lt;code&gt;CStr::from_ptr&lt;/code&gt;&lt;/a&gt; on a pointer to the string buffer, the
string is terminated at the first null byte, which might not be the end of the
string.&lt;/p&gt;
&lt;p&gt;In addition to the vulnerable functions listed for this issue, the
implementations of &lt;a href=&quot;https://doc.rust-lang.org/std/fmt/trait.Display.html&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/std/cmp/trait.PartialEq.html&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/std/string/trait.ToString.html&quot;&gt;&lt;code&gt;ToString&lt;/code&gt;&lt;/a&gt;
for &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; are also affected, since they call those functions.&lt;/p&gt;
&lt;h2&gt;Impact&lt;/h2&gt;
&lt;p&gt;Since &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; is commonly used as the type for paths by the &lt;a href=&quot;https://developer.apple.com/documentation/foundation&quot;&gt;Foundation&lt;/a&gt;
framework, null byte truncation might allow for easily bypassing file extension
checks. For example, if a file name is provided by a user and validated to have
one of a specific set of extensions, with validation taking place before
truncation, an attacker can add an accepted extension after a null byte (e.g.,
&lt;code&gt;file.exe\0.txt&lt;/code&gt;). After truncation, the file name used by the application
would be &lt;code&gt;file.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It would be better to generate unique names for files, instead of using
user-provided names, but not all applications take this approach.&lt;/p&gt;
&lt;h2&gt;Example:&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;let string = NSString::from_str(&amp;quot;null\0byte&amp;quot;);
println!(&amp;quot;{}&amp;quot;, string);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That example only prints the string &amp;quot;null&amp;quot;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0125: Vulnerability in simple_asn1</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0125.html</id><updated>2021-11-14T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0125.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0125: Vulnerability in simple_asn1"/><published>2021-11-14T00:00:00+00:00</published><summary xml:lang="en">Panic on incorrect date input to `simple_asn1`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/simple_asn1/RUSTSEC-2021-0125.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/simple_asn1/RUSTSEC-2021-0125.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0125
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Panic on incorrect date input to &lt;code&gt;simple_asn1&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-11-14&quot;&gt;
          November 14, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/simple_asn1.html&quot;&gt;simple_asn1&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/simple_asn1&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/panic.html&quot;&gt;#panic&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/string_slice.html&quot;&gt;#string_slice&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;acw&amp;#x2f;simple_asn1&amp;#x2f;issues&amp;#x2f;27&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;acw&amp;#x2f;simple_asn1&amp;#x2f;issues&amp;#x2f;27
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/panic.html&quot;&gt;#panic&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/string_slice.html&quot;&gt;#string_slice&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Version 0.6.0 of the &lt;code&gt;simple_asn1&lt;/code&gt; crate panics on certain malformed
inputs to its parsing functions, including &lt;code&gt;from_der&lt;/code&gt; and &lt;code&gt;der_decode&lt;/code&gt;.
Because this crate is frequently used with inputs from the network, this
should be considered a security vulnerability.&lt;/p&gt;
&lt;p&gt;The issue occurs when parsing the old ASN.1 &amp;quot;UTCTime&amp;quot; time format.  If an
attacker provides a UTCTime where the first character is ASCII but the
second character is above 0x7f, a string slice operation in the
&lt;code&gt;from_der_&lt;/code&gt; function will try to slice into the middle of a UTF-8
character, and cause a panic.&lt;/p&gt;
&lt;p&gt;This error was introduced in commit
&lt;a href=&quot;https://github.com/acw/simple_asn1/commit/d7d39d709577710e9dc8833ee57d200eef366db8&quot;&gt;&lt;code&gt;d7d39d709577710e9dc8&lt;/code&gt;&lt;/a&gt;,
which updated &lt;code&gt;simple_asn1&lt;/code&gt; to use &lt;code&gt;time&lt;/code&gt; instead of &lt;code&gt;chrono&lt;/code&gt; because of
&lt;a href=&quot;https://rustsec.org/advisories/RUSTSEC-2020-0159&quot;&gt;&lt;code&gt;RUSTSEC-2020-159&lt;/code&gt;&lt;/a&gt;.
Versions of &lt;code&gt;simple_asn1&lt;/code&gt; before 0.6.0 are not affected by this issue.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/acw/simple_asn1/pull/28&quot;&gt;patch&lt;/a&gt; was applied in
&lt;code&gt;simple_asn1&lt;/code&gt; version 0.6.1.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0122: Vulnerability in flatbuffers</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0122.html</id><updated>2021-10-31T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0122.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0122: Vulnerability in flatbuffers"/><published>2021-10-31T00:00:00+00:00</published><summary xml:lang="en">Generated code can read and write out of bounds in safe code</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/flatbuffers/RUSTSEC-2021-0122.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/flatbuffers/RUSTSEC-2021-0122.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0122
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Generated code can read and write out of bounds in safe code&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-10-31&quot;&gt;
          October 31, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/flatbuffers.html&quot;&gt;flatbuffers&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/flatbuffers&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;google&amp;#x2f;flatbuffers&amp;#x2f;issues&amp;#x2f;6627&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;google&amp;#x2f;flatbuffers&amp;#x2f;issues&amp;#x2f;6627
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      
      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;9.8 &lt;span class=&quot;tag critical&quot;&gt;
        CRITICAL
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1&amp;#x2f;AV:N&amp;#x2f;AC:L&amp;#x2f;PR:N&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:H&amp;#x2f;I:H&amp;#x2f;A:H&quot;&gt;CVSS:3.1&amp;#x2f;AV:N&amp;#x2f;AC:L&amp;#x2f;PR:N&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:H&amp;#x2f;I:H&amp;#x2f;A:H&lt;/a&gt;&lt;/dd&gt;
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Code generated by flatbuffers&apos; compiler is &lt;code&gt;unsafe&lt;/code&gt; but not marked as such.
See https://github.com/google/flatbuffers/issues/6627 for details.&lt;/p&gt;
&lt;p&gt;All users that use generated code by &lt;code&gt;flatbuffers&lt;/code&gt; compiler are recommended to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;not expose flatbuffer generated code as part of their public APIs&lt;/li&gt;
&lt;li&gt;audit their code and look for any usage of &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, or any method that uses them
(e.g. &lt;code&gt;self_follow&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Carefuly go through the crates&apos; documentation to understand which &amp;quot;safe&amp;quot; APIs are not
intended to be used.&lt;/li&gt;
&lt;/ol&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0120: Unsoundness in abomonation</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0120.html</id><updated>2021-10-17T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0120.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0120: Unsoundness in abomonation"/><published>2021-10-17T00:00:00+00:00</published><summary xml:lang="en">abomonation transmutes &amp;amp;T to and from &amp;amp;[u8] without sufficient constraints</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/abomonation/RUSTSEC-2021-0120.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/abomonation/RUSTSEC-2021-0120.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0120
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;abomonation transmutes &amp;amp;T to and from &amp;amp;[u8] without sufficient constraints&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-10-17&quot;&gt;
          October 17, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/abomonation.html&quot;&gt;abomonation&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/abomonation&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;TimelyDataflow&amp;#x2f;abomonation&amp;#x2f;issues&amp;#x2f;23&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;TimelyDataflow&amp;#x2f;abomonation&amp;#x2f;issues&amp;#x2f;23
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This transmute is at the core of the abomonation crates. It&apos;s so easy to use it to violate alignment requirements that no test in the crate&apos;s test suite passes under miri.
The use of this transmute in serialization/deserialization also incorrectly assumes that the layout of a repr(Rust) type is stable.
This transmute can also disclose both the contents of padding bytes which may be an information leak and the contents of pointers, which may be used to defeat ASLR.&lt;/p&gt;

  &lt;/article&gt;</content></entry></feed>